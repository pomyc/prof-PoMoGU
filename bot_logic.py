import os
import openai
from flask import jsonify
from seniority_calculator import calculate_seniority

openai.api_key = os.getenv("OPENAI_API_KEY")

# –ü—Ä–æ—Å—Ç–∏–π user_state ‚Äî —Å–ª–æ–≤–Ω–∏–∫ –¥–ª—è –∑–±–µ—Ä—ñ–≥–∞–Ω–Ω—è "—Ä–µ–∂–∏–º—É"
user_state = {}

def handle_message(data):
    message = data['message']['text']
    chat_id = data['message']['chat']['id']
    user_id = data['message']['from']['id']

    # –Ø–∫—â–æ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á —É —Ä–µ–∂–∏–º—ñ —Ä–æ–∑—Ä–∞—Ö—É–Ω–∫—É —Å—Ç–∞–∂—É
    if user_state.get(user_id) == "awaiting_seniority_input":
        reply = calculate_seniority_input(message)
        user_state.pop(user_id, None)  # –û—á–∏—Å—Ç–∏—Ç–∏ —Å—Ç–∞–Ω
        return jsonify({"method": "sendMessage", "chat_id": chat_id, "text": reply})

    # –Ø–∫—â–æ –∫–æ–º–∞–Ω–¥–∞ /—Å—Ç–∞–∂ –∞–±–æ –Ω–∞—Ç–∏—Å–∫–∞–Ω–Ω—è –∫–Ω–æ–ø–∫–∏
    if message.strip().lower() in ["/—Å—Ç–∞–∂", "—Ä–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ç—Ä—É–¥–æ–≤–æ–≥–æ —Å—Ç–∞–∂—É"]:
        user_state[user_id] = "awaiting_seniority_input"
        return jsonify({
            "method": "sendMessage",
            "chat_id": chat_id,
            "text": "üìÖ –í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É –ø–æ—á–∞—Ç–∫—É —Ç–∞ –¥–∞—Ç—É –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ —á–µ—Ä–µ–∑ –∫—Ä–∞–ø–∫—É –∑ –∫–æ–º–∞–º–∏.\n–ù–∞–ø—Ä–∏–∫–ª–∞–¥:\n01.09.2015; 24.04.2025\n–ê–±–æ –ø—Ä–æ—Å—Ç–æ –æ–¥–Ω—É –¥–∞—Ç—É, —è–∫—â–æ –ø—Ä–∞—Ü—é—î—Ç–µ –¥–æ—Å—ñ."
        })

    # –û—Å–Ω–æ–≤–Ω–∞ GPT-–ª–æ–≥—ñ–∫–∞
    reply = ask_gpt(message)
    return jsonify({"method": "sendMessage", "chat_id": chat_id, "text": reply})

def calculate_seniority_input(message):
    try:
        if ";" in message:
            start_date, end_date = [d.strip() for d in message.split(";")]
            return calculate_seniority(start_date, end_date)
        else:
            return calculate_seniority(message.strip())
    except Exception as e:
        return (
            "‚ö†Ô∏è –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Ç–µ—Å—å, —â–æ –≤–∏ –≤–≤–µ–ª–∏ –¥–∞—Ç–∏ —É —Ñ–æ—Ä–º–∞—Ç—ñ –î–î.–ú–ú.–†–†–†–†\n"
            "–ù–∞–ø—Ä–∏–∫–ª–∞–¥: 01.09.2015; 24.04.2025"
        )

def ask_gpt(message):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o",
            messages=[
                {"role": "system", "content": "–í–∏ –ø—Ä–æ—Ñ—Å–ø—ñ–ª–∫–æ–≤–∏–π –ø–æ–º—ñ—á–Ω–∏–∫. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π—Ç–µ –∫–æ—Ä–æ—Ç–∫–æ, –≤–≤—ñ—á–ª–∏–≤–æ, –∑—Ä–æ–∑—É–º—ñ–ª–æ."},
                {"role": "user", "content": message}
            ]
        )
        return response.choices[0].message.content
    except Exception as e:
        print(f"‚ùå GPT error: {e}")
        return (
            "üîç –ù–µ –≤–¥–∞–ª–æ—Å—è –∑–Ω–∞–π—Ç–∏ —Ç–æ—á–Ω–æ—ó –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ.\n"
            "üìç –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –ø—Ä–æ—Ñ—Å–ø—ñ–ª–∫–∏:\n"
            "–î–Ω—ñ–ø—Ä–æ, –ø—Ä. –î.–Ø–≤–æ—Ä–Ω–∏—Ü—å–∫–æ–≥–æ, 93, –∫.327\n"
            "üìû 050 324-54-11\n"
            "üìß profpmgu@gmail.com"
        )
