import os
import openai
from flask import jsonify
from seniority_calculator import calculate_seniority
import chromadb
from chromadb.config import Settings

# API –∫–ª—é—á OpenAI
openai.api_key = os.getenv("OPENAI_API_KEY")

# –Ü–Ω—ñ—Ü—ñ–∞–ª—ñ–∑–∞—Ü—ñ—è ChromaDB
chroma_client = chromadb.Client(Settings(
    persist_directory="./knowledge_base",
    chroma_db_impl="duckdb+parquet"
))
collection = chroma_client.get_or_create_collection(name="prof_union_knowledge")

# –°—Ç–∞–Ω –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á—ñ–≤
user_state = {}

# –û—Å–Ω–æ–≤–Ω–∞ —Ñ—É–Ω–∫—Ü—ñ—è
def handle_message(data):
    message_obj = data.get("message", {})
    message = message_obj.get("text")
    chat_id = message_obj.get("chat", {}).get("id")
    user_id = message_obj.get("from", {}).get("id")

    if not message or not chat_id:
        return jsonify({
            "method": "sendMessage",
            "chat_id": chat_id or 0,
            "text": "‚ö†Ô∏è –Ø —Ä–æ–∑—É–º—ñ—é —Ç—ñ–ª—å–∫–∏ —Ç–µ–∫—Å—Ç–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è."
        })

    if message.strip().lower() in ["/start", "start"]:
        return jsonify({
            "method": "sendMessage",
            "chat_id": chat_id,
            "text": "üëã –í—ñ—Ç–∞—é! –Ø –ø—Ä–æ—Ñ—Å–ø—ñ–ª–∫–æ–≤–∏–π –ø–æ–º—ñ—á–Ω–∏–∫. –û–±–µ—Ä—ñ—Ç—å –¥—ñ—é:",
            "reply_markup": {
                "keyboard": [
                    [{"text": "üìã –ó–∞–¥–∞—Ç–∏ –ø–∏—Ç–∞–Ω–Ω—è"}],
                    [{"text": "üìö –ó–∞–ø–∏—Ç –¥–æ –±–∞–∑–∏ –∑–Ω–∞–Ω—å"}],
                    [{"text": "üìÖ –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ç—Ä—É–¥–æ–≤–æ–≥–æ —Å—Ç–∞–∂—É"}],
                    [{"text": "üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏ –ø—Ä–æ—Ñ—Å–ø—ñ–ª–∫–∏"}]
                ],
                "resize_keyboard": True
            }
        })

    if message == "üìû –ö–æ–Ω—Ç–∞–∫—Ç–∏ –ø—Ä–æ—Ñ—Å–ø—ñ–ª–∫–∏":
        return jsonify({
            "method": "sendMessage",
            "chat_id": chat_id,
            "text": "üìç –î–Ω—ñ–ø—Ä–æ, –ø—Ä. –î.–Ø–≤–æ—Ä–Ω–∏—Ü—å–∫–æ–≥–æ, 93, –æ—Ñ. 327\nüìû 050 324-54-11\nüìß profpmgu@gmail.com\nüåê http://pmguinfo.dp.ua"
        })

    if message == "üìÖ –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Ç—Ä—É–¥–æ–≤–æ–≥–æ —Å—Ç–∞–∂—É":
        user_state[user_id] = "awaiting_seniority_input"
        return jsonify({
            "method": "sendMessage",
            "chat_id": chat_id,
            "text": "üìÖ –í–≤–µ–¥—ñ—Ç—å –¥–∞—Ç—É –ø–æ—á–∞—Ç–∫—É —Ç–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–Ω—è —Ä–æ–±–æ—Ç–∏ —á–µ—Ä–µ–∑ –∫—Ä–∞–ø–∫—É –∑ –∫–æ–º–æ—é (;)\n–ù–∞–ø—Ä–∏–∫–ª–∞–¥:\n01.09.2015; 24.04.2025\n–∞–±–æ —Ç—ñ–ª—å–∫–∏ –æ–¥–Ω—É –¥–∞—Ç—É, —è–∫—â–æ –¥–æ—Å—ñ –ø—Ä–∞—Ü—é—î—Ç–µ."
        })

    if user_state.get(user_id) == "awaiting_seniority_input":
        reply = calculate_seniority_input(message)
        user_state.pop(user_id, None)
        return jsonify({
            "method": "sendMessage",
            "chat_id": chat_id,
            "text": reply
        })

    if message == "üìö –ó–∞–ø–∏—Ç –¥–æ –±–∞–∑–∏ –∑–Ω–∞–Ω—å":
        user_state[user_id] = "awaiting_knowledge_query"
        return jsonify({
            "method": "sendMessage",
            "chat_id": chat_id,
            "text": "üìö –í–≤–µ–¥—ñ—Ç—å –∑–∞–ø–∏—Ç, —ñ —è —Å–ø—Ä–æ–±—É—é –∑–Ω–∞–π—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å —É –±–∞–∑—ñ –∑–Ω–∞–Ω—å:"
        })

    if user_state.get(user_id) == "awaiting_knowledge_query":
        reply = search_in_knowledge_base(message)
        user_state.pop(user_id, None)
        return jsonify({
            "method": "sendMessage",
            "chat_id": chat_id,
            "text": reply
        })

    # GPT ‚Äî –æ—Å–Ω–æ–≤–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å
    reply = ask_gpt(message)
    return jsonify({
        "method": "sendMessage",
        "chat_id": chat_id,
        "text": reply
    })

# –†–æ–∑—Ä–∞—Ö—É–Ω–æ–∫ —Å—Ç–∞–∂—É
def calculate_seniority_input(message):
    try:
        if ";" in message:
            start_date, end_date = [d.strip() for d in message.split(";")]
            return calculate_seniority(start_date, end_date)
        else:
            return calculate_seniority(message.strip())
    except Exception:
        return "‚ö†Ô∏è –ù–µ–≤—ñ—Ä–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç. –ù–∞–ø–∏—à—ñ—Ç—å, –Ω–∞–ø—Ä–∏–∫–ª–∞–¥:\n01.09.2015; 24.04.2025"

# GPT-–≤—ñ–¥–ø–æ–≤—ñ–¥—å
def ask_gpt(message):
    try:
        response = openai.ChatCompletion.create(
            model="gpt-4o",
            temperature=0.3,
            messages=[
                {
                    "role": "system",
                    "content": (
"–¢–∏ –ø—Ä–æ—Ñ—Å–ø—ñ–ª–∫–æ–≤–∏–π –ø–æ–º—ñ—á–Ω–∏–∫. –í—ñ–¥–ø–æ–≤—ñ–¥–∞–π –æ—Ñ—ñ—Ü—ñ–π–Ω–æ—é —É–∫—Ä–∞—ó–Ω—Å—å–∫–æ—é –º–æ–≤–æ—é, –ø–æ—Å–∏–ª–∞—é—á–∏—Å—å –Ω–∞ —Å—Ç–∞—Ç—Ç—ñ –ö–ó–ø–ü, —è–∫—â–æ —Ü–µ –º–æ–∂–ª–∏–≤–æ. –ù–∞–ø—Ä–∏–∫–ª–∞–¥: '–í—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ —Å—Ç. 21 –ö–ó–ø–ü –£–∫—Ä–∞—ó–Ω–∏...' –Ø–∫—â–æ –Ω–µ –∑–Ω–∞—î—à –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ, –Ω–∞–ø–∏—à–∏, —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –∑–≤–µ—Ä–Ω—É—Ç–∏—Å—è –∑–∞ –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü—ñ—î—é –¥–æ —é—Ä–∏—Å—Ç–∞ –ø—Ä–æ—Ñ—Å–ø—ñ–ª–∫–∏. "
"–Ø–∫—â–æ –ø–∏—Ç–∞–Ω–Ω—è —Å—Ç–æ—Å—É—î—Ç—å—Å—è —Ç—Ä—É–¥–æ–≤–∏—Ö –ø—Ä–∞–≤, —Å–æ—Ü—ñ–∞–ª—å–Ω–∏—Ö –≥–∞—Ä–∞–Ω—Ç—ñ–π –∞–±–æ –ø—Ä–æ—Ñ—Å–ø—ñ–ª–∫–æ–≤–æ–≥–æ –∑–∞—Ö–∏—Å—Ç—É ‚Äî –¥–∞–π –∫–æ–Ω–∫—Ä–µ—Ç–Ω—É –≤—ñ–¥–ø–æ–≤—ñ–¥—å —Ç–∞ –ø–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –Ω–æ—Ä–º–∏ –∑–∞–∫–æ–Ω–æ–¥–∞–≤—Å—Ç–≤–∞."
                    )
                },
                {"role": "user", "content": message}
            ]
        )
        return response.choices[0].message.content
    except Exception as e:
        print(f"‚ùå GPT error: {e}")
        return (
            "üîç –ù–µ –≤–¥–∞–ª–æ—Å—è –æ—Ç—Ä–∏–º–∞—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥—å.\n"
            "üìç –ó–≤–µ—Ä–Ω—ñ—Ç—å—Å—è –¥–æ –ø—Ä–æ—Ñ—Å–ø—ñ–ª–∫–∏:\n"
            "–î–Ω—ñ–ø—Ä–æ, –ø—Ä. –î.–Ø–≤–æ—Ä–Ω–∏—Ü—å–∫–æ–≥–æ, 93, –∫.327\n"
            "üìû 050 324-54-11\n"
            "üìß profpmgu@gmail.com"
        )

# –ü–æ—à—É–∫ —É –ª–æ–∫–∞–ª—å–Ω—ñ–π –±–∞–∑—ñ –∑–Ω–∞–Ω—å
def search_in_knowledge_base(query):
    try:
        results = collection.query(query_texts=[query], n_results=1)
        documents = results.get('documents', [[]])[0]
        if not documents:
            return "üìö –£ –±–∞–∑—ñ –∑–Ω–∞–Ω—å –Ω–µ –∑–Ω–∞–π–¥–µ–Ω–æ –≤—ñ–¥–ø–æ–≤—ñ–¥—ñ –Ω–∞ —Ü–µ –ø–∏—Ç–∞–Ω–Ω—è."
        return f"üìñ –ó–Ω–∞–π–¥–µ–Ω–æ –≤ –±–∞–∑—ñ –∑–Ω–∞–Ω—å:\n\n{documents[0]}"
    except Exception as e:
        print(f"‚ùå DB error: {e}")
        return "‚ö†Ô∏è –°—Ç–∞–ª–∞—Å—è –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –ø–æ—à—É–∫—É –≤ –±–∞–∑—ñ –∑–Ω–∞–Ω—å."

        print("üß† –í—Å—å–æ–≥–æ –¥–æ–∫—É–º–µ–Ω—Ç—ñ–≤ —É –±–∞–∑—ñ:", collection.count())
